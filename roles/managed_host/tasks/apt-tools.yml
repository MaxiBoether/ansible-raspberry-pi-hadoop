- name: install tools for managing apt-based systems
  package: name="{{ item.key }}" state="{{ item.value }}"
  with_dict: "{{ apt_tools |
                 combine(apt_tools_extra | default({})) }}"

- name: cleanup files of unneeded packages
  file: path="{{ item }}" state=absent
  with_items:
    - /var/cache/apt-xapian-index

- name: make needrestart default to list services only
  lineinfile: dest=/etc/needrestart/conf.d/list-services-only.conf
              line="$nrconf{restart} = 'l';"
              state=present create=yes mode=0644

- name: make needrestart default to list required reboots only
  lineinfile: dest=/etc/needrestart/conf.d/list-required-reboots-only.conf
              regexp="\$nrconf\{kernelhints\}"
              line="$nrconf{kernelhints} = -1;"
              state=present create=yes mode=0644

- name: make needrestart default to use stdio "interface"
  lineinfile: dest=/etc/needrestart/conf.d/stdio-interface.conf
              regexp="\$nrconf\{ui\}"
              line="$nrconf{ui} = 'NeedRestart::UI::stdio';"
              state=present create=yes mode=0644

- name: remove needrestart's hook into apt to make sure it doesn't require
        user interaction (doing this via its settings seems to be unreliable)
  register: unhook_apt_result
  command: find /etc/apt -name "*needrestart*" -print -delete
  changed_when: unhook_apt_result.stdout != ""
  failed_when: unhook_apt_result is failed

- name: restart services using outdated libraries
  shell: needrestart -blra 2>/dev/null
  register: result
  changed_when: "result.stdout != ''"

- name: check for pending kernel updates
  command: needrestart -bk
  register: needrestart_result
  changed_when: False

- name: email root if machine needs a reboot
  # non-recent versions of needrestart read from stdin if newer kernels
  # are available, since we use '-b'
  shell: needrestart -bk | mail -s "$(hostname -f) needs a reboot" root
  # see https://github.com/ansible/ansible/issues/2769:
  when: "'NEEDRESTART-KSTA: 2' in needrestart_result.stdout or
         'NEEDRESTART-KSTA: 3' in needrestart_result.stdout"

- name: schedule yearly notification of unpurged APT packages
  cron: name="list (and thereby email) unpurged APT packages"
        job=/opt/admintools/scripts/dpkg-list-unpurged-packages
        special_time=yearly

# The default solution for the dependencies listed below results in a
# lot of GTK-related packages get installed. This is a waste on headless
# systems, so we replace the responsible package with an non-graphical
# alternative.
# dependencies: apt -> debian-archive-keyring -> gnupg-agent -> pinentry
- name: replace pinentry package with non-graphical alternative
  block:

  - name: install non-graphical version of pinentry (required by gnupg)
    package:
      name: pinentry-tty
      state: latest

    # we use the command modules, since no Ansible module can mark
    # packages automatically installed
  - name: mark non-graphical version of pinentry automatically installed
    command: aptitude markauto pinentry-tty

  - name: remove graphical variants of pinentry
    package:
      name: "{{ item }}"
      state: absent
    with_items:
      - pinentry-curses
      - pinentry-gtk2

  when: ansible_distribution == 'Debian' and
        ansible_distribution_release|int > 8
